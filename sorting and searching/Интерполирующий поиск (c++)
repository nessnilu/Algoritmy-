#include <iostream>
#include <vector>

// Функция интерполирующего поиска
int interpolationSearch(const std::vector<int>& arr, int target) {
    int low = 0;
    int high = arr.size() - 1;
    
    while (low <= high && target >= arr[low] && target <= arr[high]) {
        // Вычисляем позицию с помощью интерполяционной формулы
        int pos = low + ((target - arr[low]) * (high - low)) / (arr[high] - arr[low]);
        
        if (arr[pos] == target) {
            return pos;  // Элемент найден
        }
        else if (arr[pos] < target) {
            low = pos + 1;  // Искомый элемент в правой части
        }
        else {
            high = pos - 1;  // Искомый элемент в левой части
        }
    }
    
    return -1;  // Элемент не найден
}

int main() {
    // Массив должен быть отсортирован для интерполирующего поиска
    std::vector<int> arr = {10, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 33, 35, 42, 47};
    int target = 18;
    
    std::cout << "Отсортированный массив: ";
    for (int num : arr) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
    
    int result = interpolationSearch(arr, target);
    
    if (result != -1) {
        std::cout << "Элемент " << target << " найден по индексу: " << result << std::endl;
    } else {
        std::cout << "Элемент " << target << " не найден в массиве" << std::endl;
    }
    
    return 0;
}
