#include <iostream>
#include <vector>

using namespace std;

// Функция сортировки выбором
void selectionSort(vector<int>& arr) {
    int n = arr.size();
    
    // Проходим по всем элементам массива, кроме последнего
    for (int i = 0; i < n - 1; i++) {
        // Предполагаем, что минимальный элемент находится на текущей позиции i
        int minIndex = i;
        
        // Ищем минимальный элемент в оставшейся части массива (от i+1 до конца)
        for (int j = i + 1; j < n; j++) {
            // Если находим элемент меньше текущего минимального, обновляем minIndex
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        
        // Если минимальный элемент не на текущей позиции, меняем их местами
        if (minIndex != i) {
            // Обмен значений между текущим элементом и найденным минимальным
            int temp = arr[i];
            arr[i] = arr[minIndex];
            arr[minIndex] = temp;
        }
        
        // На этом этапе элемент arr[i] находится на своем окончательном месте
    }
}

// Вспомогательная функция для вывода массива
void printArray(const vector<int>& arr) {
    for (int i = 0; i < arr.size(); i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main() {
    // Создаем тестовый массив
    vector<int> arr = {64, 25, 12, 22, 11, 5, 8, 3, 17, 9};
    
    cout << "Исходный массив: ";
    printArray(arr);
    
    // Вызываем функцию сортировки выбором
    selectionSort(arr);
    
    cout << "Отсортированный массив: ";
    printArray(arr);
    
    return 0;
}
